{"ast":null,"code":"'use strict';\n\nvar _typeof = require(\"C:/Users/wingd/OneDrive/Documentos/GitHub/desafio-coordene/code/node_modules/@babel/runtime/helpers/typeof.js\").default;\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.test.js\");\n\nrequire(\"core-js/modules/es.string.replace.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.string.split.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nrequire(\"core-js/modules/es.number.constructor.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/es.string.starts-with.js\");\n\nvar path = require('path');\n\nvar win32 = process.platform === 'win32';\n\nvar _require = require('./constants'),\n    REGEX_BACKSLASH = _require.REGEX_BACKSLASH,\n    REGEX_REMOVE_BACKSLASH = _require.REGEX_REMOVE_BACKSLASH,\n    REGEX_SPECIAL_CHARS = _require.REGEX_SPECIAL_CHARS,\n    REGEX_SPECIAL_CHARS_GLOBAL = _require.REGEX_SPECIAL_CHARS_GLOBAL;\n\nexports.isObject = function (val) {\n  return val !== null && _typeof(val) === 'object' && !Array.isArray(val);\n};\n\nexports.hasRegexChars = function (str) {\n  return REGEX_SPECIAL_CHARS.test(str);\n};\n\nexports.isRegexChar = function (str) {\n  return str.length === 1 && exports.hasRegexChars(str);\n};\n\nexports.escapeRegex = function (str) {\n  return str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\n};\n\nexports.toPosixSlashes = function (str) {\n  return str.replace(REGEX_BACKSLASH, '/');\n};\n\nexports.removeBackslashes = function (str) {\n  return str.replace(REGEX_REMOVE_BACKSLASH, function (match) {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = function () {\n  var segs = process.version.slice(1).split('.').map(Number);\n\n  if (segs.length === 3 && segs[0] >= 9 || segs[0] === 8 && segs[1] >= 10) {\n    return true;\n  }\n\n  return false;\n};\n\nexports.isWindows = function (options) {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = function (input, char, lastIdx) {\n  var idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return \"\".concat(input.slice(0, idx), \"\\\\\").concat(input.slice(idx));\n};\n\nexports.removePrefix = function (input) {\n  var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var output = input;\n\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n\n  return output;\n};\n\nexports.wrapOutput = function (input) {\n  var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var prepend = options.contains ? '' : '^';\n  var append = options.contains ? '' : '$';\n  var output = \"\".concat(prepend, \"(?:\").concat(input, \")\").concat(append);\n\n  if (state.negated === true) {\n    output = \"(?:^(?!\".concat(output, \").*$)\");\n  }\n\n  return output;\n};","map":{"version":3,"sources":["C:/Users/wingd/OneDrive/Documentos/GitHub/desafio-coordene/code/node_modules/picomatch/lib/utils.js"],"names":["path","require","win32","process","platform","REGEX_BACKSLASH","REGEX_REMOVE_BACKSLASH","REGEX_SPECIAL_CHARS","REGEX_SPECIAL_CHARS_GLOBAL","exports","isObject","val","Array","isArray","hasRegexChars","str","test","isRegexChar","length","escapeRegex","replace","toPosixSlashes","removeBackslashes","match","supportsLookbehinds","segs","version","slice","split","map","Number","isWindows","options","windows","sep","escapeLast","input","char","lastIdx","idx","lastIndexOf","removePrefix","state","output","startsWith","prefix","wrapOutput","prepend","contains","append","negated"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAACC,QAAR,KAAqB,OAAnC;;AACA,eAKIH,OAAO,CAAC,aAAD,CALX;AAAA,IACEI,eADF,YACEA,eADF;AAAA,IAEEC,sBAFF,YAEEA,sBAFF;AAAA,IAGEC,mBAHF,YAGEA,mBAHF;AAAA,IAIEC,0BAJF,YAIEA,0BAJF;;AAOAC,OAAO,CAACC,QAAR,GAAmB,UAAAC,GAAG;AAAA,SAAIA,GAAG,KAAK,IAAR,IAAgB,QAAOA,GAAP,MAAe,QAA/B,IAA2C,CAACC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAhD;AAAA,CAAtB;;AACAF,OAAO,CAACK,aAAR,GAAwB,UAAAC,GAAG;AAAA,SAAIR,mBAAmB,CAACS,IAApB,CAAyBD,GAAzB,CAAJ;AAAA,CAA3B;;AACAN,OAAO,CAACQ,WAAR,GAAsB,UAAAF,GAAG;AAAA,SAAIA,GAAG,CAACG,MAAJ,KAAe,CAAf,IAAoBT,OAAO,CAACK,aAAR,CAAsBC,GAAtB,CAAxB;AAAA,CAAzB;;AACAN,OAAO,CAACU,WAAR,GAAsB,UAAAJ,GAAG;AAAA,SAAIA,GAAG,CAACK,OAAJ,CAAYZ,0BAAZ,EAAwC,MAAxC,CAAJ;AAAA,CAAzB;;AACAC,OAAO,CAACY,cAAR,GAAyB,UAAAN,GAAG;AAAA,SAAIA,GAAG,CAACK,OAAJ,CAAYf,eAAZ,EAA6B,GAA7B,CAAJ;AAAA,CAA5B;;AAEAI,OAAO,CAACa,iBAAR,GAA4B,UAAAP,GAAG,EAAI;AACjC,SAAOA,GAAG,CAACK,OAAJ,CAAYd,sBAAZ,EAAoC,UAAAiB,KAAK,EAAI;AAClD,WAAOA,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBA,KAA7B;AACD,GAFM,CAAP;AAGD,CAJD;;AAMAd,OAAO,CAACe,mBAAR,GAA8B,YAAM;AAClC,MAAMC,IAAI,GAAGtB,OAAO,CAACuB,OAAR,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyBC,KAAzB,CAA+B,GAA/B,EAAoCC,GAApC,CAAwCC,MAAxC,CAAb;;AACA,MAAIL,IAAI,CAACP,MAAL,KAAgB,CAAhB,IAAqBO,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAhC,IAAsCA,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAZ,IAAiBA,IAAI,CAAC,CAAD,CAAJ,IAAW,EAAtE,EAA2E;AACzE,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CAND;;AAQAhB,OAAO,CAACsB,SAAR,GAAoB,UAAAC,OAAO,EAAI;AAC7B,MAAIA,OAAO,IAAI,OAAOA,OAAO,CAACC,OAAf,KAA2B,SAA1C,EAAqD;AACnD,WAAOD,OAAO,CAACC,OAAf;AACD;;AACD,SAAO/B,KAAK,KAAK,IAAV,IAAkBF,IAAI,CAACkC,GAAL,KAAa,IAAtC;AACD,CALD;;AAOAzB,OAAO,CAAC0B,UAAR,GAAqB,UAACC,KAAD,EAAQC,IAAR,EAAcC,OAAd,EAA0B;AAC7C,MAAMC,GAAG,GAAGH,KAAK,CAACI,WAAN,CAAkBH,IAAlB,EAAwBC,OAAxB,CAAZ;AACA,MAAIC,GAAG,KAAK,CAAC,CAAb,EAAgB,OAAOH,KAAP;AAChB,MAAIA,KAAK,CAACG,GAAG,GAAG,CAAP,CAAL,KAAmB,IAAvB,EAA6B,OAAO9B,OAAO,CAAC0B,UAAR,CAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCE,GAAG,GAAG,CAAtC,CAAP;AAC7B,mBAAUH,KAAK,CAACT,KAAN,CAAY,CAAZ,EAAeY,GAAf,CAAV,eAAkCH,KAAK,CAACT,KAAN,CAAYY,GAAZ,CAAlC;AACD,CALD;;AAOA9B,OAAO,CAACgC,YAAR,GAAuB,UAACL,KAAD,EAAuB;AAAA,MAAfM,KAAe,uEAAP,EAAO;AAC5C,MAAIC,MAAM,GAAGP,KAAb;;AACA,MAAIO,MAAM,CAACC,UAAP,CAAkB,IAAlB,CAAJ,EAA6B;AAC3BD,IAAAA,MAAM,GAAGA,MAAM,CAAChB,KAAP,CAAa,CAAb,CAAT;AACAe,IAAAA,KAAK,CAACG,MAAN,GAAe,IAAf;AACD;;AACD,SAAOF,MAAP;AACD,CAPD;;AASAlC,OAAO,CAACqC,UAAR,GAAqB,UAACV,KAAD,EAAqC;AAAA,MAA7BM,KAA6B,uEAArB,EAAqB;AAAA,MAAjBV,OAAiB,uEAAP,EAAO;AACxD,MAAMe,OAAO,GAAGf,OAAO,CAACgB,QAAR,GAAmB,EAAnB,GAAwB,GAAxC;AACA,MAAMC,MAAM,GAAGjB,OAAO,CAACgB,QAAR,GAAmB,EAAnB,GAAwB,GAAvC;AAEA,MAAIL,MAAM,aAAMI,OAAN,gBAAmBX,KAAnB,cAA4Ba,MAA5B,CAAV;;AACA,MAAIP,KAAK,CAACQ,OAAN,KAAkB,IAAtB,EAA4B;AAC1BP,IAAAA,MAAM,oBAAaA,MAAb,UAAN;AACD;;AACD,SAAOA,MAAP;AACD,CATD","sourcesContent":["'use strict';\r\n\r\nconst path = require('path');\r\nconst win32 = process.platform === 'win32';\r\nconst {\r\n  REGEX_BACKSLASH,\r\n  REGEX_REMOVE_BACKSLASH,\r\n  REGEX_SPECIAL_CHARS,\r\n  REGEX_SPECIAL_CHARS_GLOBAL\r\n} = require('./constants');\r\n\r\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\r\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\r\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\r\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\r\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\r\n\r\nexports.removeBackslashes = str => {\r\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\r\n    return match === '\\\\' ? '' : match;\r\n  });\r\n};\r\n\r\nexports.supportsLookbehinds = () => {\r\n  const segs = process.version.slice(1).split('.').map(Number);\r\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexports.isWindows = options => {\r\n  if (options && typeof options.windows === 'boolean') {\r\n    return options.windows;\r\n  }\r\n  return win32 === true || path.sep === '\\\\';\r\n};\r\n\r\nexports.escapeLast = (input, char, lastIdx) => {\r\n  const idx = input.lastIndexOf(char, lastIdx);\r\n  if (idx === -1) return input;\r\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\r\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\r\n};\r\n\r\nexports.removePrefix = (input, state = {}) => {\r\n  let output = input;\r\n  if (output.startsWith('./')) {\r\n    output = output.slice(2);\r\n    state.prefix = './';\r\n  }\r\n  return output;\r\n};\r\n\r\nexports.wrapOutput = (input, state = {}, options = {}) => {\r\n  const prepend = options.contains ? '' : '^';\r\n  const append = options.contains ? '' : '$';\r\n\r\n  let output = `${prepend}(?:${input})${append}`;\r\n  if (state.negated === true) {\r\n    output = `(?:^(?!${output}).*$)`;\r\n  }\r\n  return output;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}